syntax = "proto3";

package api;

import "google/protobuf/empty.proto";

import "google/protobuf/timestamp.proto";

// option go_package = "github.com/ts1106/favomic-api/ent/proto/entpb";

service AuthorService {
  rpc Create ( CreateAuthorRequest ) returns ( Author );

  rpc Get ( GetAuthorRequest ) returns ( Author );

  rpc Update ( UpdateAuthorRequest ) returns ( Author );

  rpc Delete ( DeleteAuthorRequest ) returns ( google.protobuf.Empty );

  rpc List ( ListAuthorRequest ) returns ( ListAuthorResponse );

  rpc BatchCreate ( BatchCreateAuthorsRequest ) returns ( BatchCreateAuthorsResponse );

  rpc Upsert ( UpsertAuthorRequest ) returns ( Author );

  rpc Search ( SearchAuthorRequest ) returns ( Author );
}

message Author {
  bytes id = 1;

  string name = 2;

  repeated Comic comics = 3;
}

message CreateAuthorRequest {
  Author author = 1;
}

message GetAuthorRequest {
  bytes id = 1;

  View view = 2;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message UpdateAuthorRequest {
  Author author = 1;
}

message DeleteAuthorRequest {
  bytes id = 1;
}

message ListAuthorRequest {
  int32 page_size = 1;

  string page_token = 2;

  View view = 3;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message ListAuthorResponse {
  repeated Author author_list = 1;

  string next_page_token = 2;
}

message BatchCreateAuthorsRequest {
  repeated CreateAuthorRequest requests = 1;
}

message BatchCreateAuthorsResponse {
  repeated Author authors = 1;
}

message UpsertAuthorRequest {
  Author author = 1;
}

message SearchAuthorRequest {
  string name = 1;

  View view = 2;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

service ComicService {
  rpc Create ( CreateComicRequest ) returns ( Comic );

  rpc Get ( GetComicRequest ) returns ( Comic );

  rpc Update ( UpdateComicRequest ) returns ( Comic );

  rpc Delete ( DeleteComicRequest ) returns ( google.protobuf.Empty );

  rpc List ( ListComicRequest ) returns ( ListComicResponse );

  rpc BatchCreate ( BatchCreateComicsRequest ) returns ( BatchCreateComicsResponse );

  rpc Upsert ( UpsertComicRequest ) returns ( Comic );
}

message Comic {
  bytes id = 1;

  string title = 2;

  bytes author_id = 3;

  bytes magazine_id = 4;

  Author author = 5;

  Magazine magazine = 6;

  repeated Tag tags = 7;

  repeated Episode episodes = 8;
}

message CreateComicRequest {
  Comic comic = 1;
}

message GetComicRequest {
  bytes id = 1;

  View view = 2;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message UpdateComicRequest {
  Comic comic = 1;
}

message DeleteComicRequest {
  bytes id = 1;
}

message ListComicRequest {
  int32 page_size = 1;

  string page_token = 2;

  View view = 3;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message ListComicResponse {
  repeated Comic comic_list = 1;

  string next_page_token = 2;
}

message BatchCreateComicsRequest {
  repeated CreateComicRequest requests = 1;
}

message BatchCreateComicsResponse {
  repeated Comic comics = 1;
}

message UpsertComicRequest {
  Comic comic = 1;
}

service EpisodeService {
  rpc Create ( CreateEpisodeRequest ) returns ( Episode );

  rpc Get ( GetEpisodeRequest ) returns ( Episode );

  rpc Update ( UpdateEpisodeRequest ) returns ( Episode );

  rpc Delete ( DeleteEpisodeRequest ) returns ( google.protobuf.Empty );

  rpc List ( ListEpisodeRequest ) returns ( ListEpisodeResponse );

  rpc BatchCreate ( BatchCreateEpisodesRequest ) returns ( BatchCreateEpisodesResponse );

  rpc Upsert ( UpsertEpisodeRequest ) returns ( Episode );
}

message Episode {
  bytes id = 1;

  string title = 2;

  string url = 3;

  string Thumbnail = 4;

  google.protobuf.Timestamp updated_at = 5;

  bytes comic_id = 6;

  Comic comic = 7;
}

message CreateEpisodeRequest {
  Episode episode = 1;
}

message GetEpisodeRequest {
  bytes id = 1;

  View view = 2;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message UpdateEpisodeRequest {
  Episode episode = 1;
}

message DeleteEpisodeRequest {
  bytes id = 1;
}

message ListEpisodeRequest {
  int32 page_size = 1;

  string page_token = 2;

  View view = 3;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message ListEpisodeResponse {
  repeated Episode episode_list = 1;

  string next_page_token = 2;
}

message BatchCreateEpisodesRequest {
  repeated CreateEpisodeRequest requests = 1;
}

message BatchCreateEpisodesResponse {
  repeated Episode episodes = 1;
}

message UpsertEpisodeRequest {
  Episode episode = 1;
}

service MagazineService {
  rpc Create ( CreateMagazineRequest ) returns ( Magazine );

  rpc Get ( GetMagazineRequest ) returns ( Magazine );

  rpc Update ( UpdateMagazineRequest ) returns ( Magazine );

  rpc Delete ( DeleteMagazineRequest ) returns ( google.protobuf.Empty );

  rpc List ( ListMagazineRequest ) returns ( ListMagazineResponse );

  rpc BatchCreate ( BatchCreateMagazinesRequest ) returns ( BatchCreateMagazinesResponse );
  
  rpc Upsert ( UpsertMagazineRequest ) returns ( Magazine );
}

message Magazine {
  bytes id = 1;

  string name = 2;

  repeated Comic comics = 3;
}

message CreateMagazineRequest {
  Magazine magazine = 1;
}

message GetMagazineRequest {
  bytes id = 1;

  View view = 2;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message UpdateMagazineRequest {
  Magazine magazine = 1;
}

message DeleteMagazineRequest {
  bytes id = 1;
}

message ListMagazineRequest {
  int32 page_size = 1;

  string page_token = 2;

  View view = 3;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message ListMagazineResponse {
  repeated Magazine magazine_list = 1;

  string next_page_token = 2;
}

message BatchCreateMagazinesRequest {
  repeated CreateMagazineRequest requests = 1;
}

message BatchCreateMagazinesResponse {
  repeated Magazine magazines = 1;
}

message UpsertMagazineRequest {
  Magazine magazine = 1;
}

service TagService {
  rpc Create ( CreateTagRequest ) returns ( Tag );

  rpc Get ( GetTagRequest ) returns ( Tag );

  rpc Update ( UpdateTagRequest ) returns ( Tag );

  rpc Delete ( DeleteTagRequest ) returns ( google.protobuf.Empty );

  rpc List ( ListTagRequest ) returns ( ListTagResponse );

  rpc BatchCreate ( BatchCreateTagsRequest ) returns ( BatchCreateTagsResponse );
}

message Tag {
  bytes id = 1;

  string name = 2;

  repeated Comic comics = 3;
}

message CreateTagRequest {
  Tag tag = 1;
}

message GetTagRequest {
  bytes id = 1;

  View view = 2;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message UpdateTagRequest {
  Tag tag = 1;
}

message DeleteTagRequest {
  bytes id = 1;
}

message ListTagRequest {
  int32 page_size = 1;

  string page_token = 2;

  View view = 3;

  enum View {
    BASIC = 0;

    WITH_EDGES = 1;
  }
}

message ListTagResponse {
  repeated Tag tag_list = 1;

  string next_page_token = 2;
}

message BatchCreateTagsRequest {
  repeated CreateTagRequest requests = 1;
}

message BatchCreateTagsResponse {
  repeated Tag tags = 1;
}
