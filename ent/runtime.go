// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/ts1106/favomic-api/ent/author"
	"github.com/ts1106/favomic-api/ent/comic"
	"github.com/ts1106/favomic-api/ent/episode"
	"github.com/ts1106/favomic-api/ent/magazine"
	"github.com/ts1106/favomic-api/ent/schema"
	"github.com/ts1106/favomic-api/ent/tag"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authorFields := schema.Author{}.Fields()
	_ = authorFields
	// authorDescName is the schema descriptor for name field.
	authorDescName := authorFields[1].Descriptor()
	// author.NameValidator is a validator for the "name" field. It is called by the builders before save.
	author.NameValidator = authorDescName.Validators[0].(func(string) error)
	// authorDescID is the schema descriptor for id field.
	authorDescID := authorFields[0].Descriptor()
	// author.DefaultID holds the default value on creation for the id field.
	author.DefaultID = authorDescID.Default.(func() uuid.UUID)
	comicFields := schema.Comic{}.Fields()
	_ = comicFields
	// comicDescTitle is the schema descriptor for title field.
	comicDescTitle := comicFields[1].Descriptor()
	// comic.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	comic.TitleValidator = comicDescTitle.Validators[0].(func(string) error)
	// comicDescID is the schema descriptor for id field.
	comicDescID := comicFields[0].Descriptor()
	// comic.DefaultID holds the default value on creation for the id field.
	comic.DefaultID = comicDescID.Default.(func() uuid.UUID)
	episodeFields := schema.Episode{}.Fields()
	_ = episodeFields
	// episodeDescTitle is the schema descriptor for title field.
	episodeDescTitle := episodeFields[1].Descriptor()
	// episode.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	episode.TitleValidator = episodeDescTitle.Validators[0].(func(string) error)
	// episodeDescURL is the schema descriptor for url field.
	episodeDescURL := episodeFields[2].Descriptor()
	// episode.URLValidator is a validator for the "url" field. It is called by the builders before save.
	episode.URLValidator = episodeDescURL.Validators[0].(func(string) error)
	// episodeDescThumbnail is the schema descriptor for thumbnail field.
	episodeDescThumbnail := episodeFields[3].Descriptor()
	// episode.ThumbnailValidator is a validator for the "thumbnail" field. It is called by the builders before save.
	episode.ThumbnailValidator = episodeDescThumbnail.Validators[0].(func(string) error)
	// episodeDescUpdatedAt is the schema descriptor for updated_at field.
	episodeDescUpdatedAt := episodeFields[4].Descriptor()
	// episode.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	episode.DefaultUpdatedAt = episodeDescUpdatedAt.Default.(func() time.Time)
	// episodeDescID is the schema descriptor for id field.
	episodeDescID := episodeFields[0].Descriptor()
	// episode.DefaultID holds the default value on creation for the id field.
	episode.DefaultID = episodeDescID.Default.(func() uuid.UUID)
	magazineFields := schema.Magazine{}.Fields()
	_ = magazineFields
	// magazineDescName is the schema descriptor for name field.
	magazineDescName := magazineFields[1].Descriptor()
	// magazine.NameValidator is a validator for the "name" field. It is called by the builders before save.
	magazine.NameValidator = magazineDescName.Validators[0].(func(string) error)
	// magazineDescID is the schema descriptor for id field.
	magazineDescID := magazineFields[0].Descriptor()
	// magazine.DefaultID holds the default value on creation for the id field.
	magazine.DefaultID = magazineDescID.Default.(func() uuid.UUID)
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescName is the schema descriptor for name field.
	tagDescName := tagFields[1].Descriptor()
	// tag.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tag.NameValidator = tagDescName.Validators[0].(func(string) error)
	// tagDescID is the schema descriptor for id field.
	tagDescID := tagFields[0].Descriptor()
	// tag.DefaultID holds the default value on creation for the id field.
	tag.DefaultID = tagDescID.Default.(func() uuid.UUID)
}
